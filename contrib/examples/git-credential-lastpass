#!/bin/bash

# A credential helper for git to retrieve usernames and passwords from lastpass.
# For general usage, see https://git-scm.com/docs/gitcredentials.
#
# To set up this git credential helper:
# 1. Put this somewhere in your path.
# 2. git config --global credential.helper "lastpass"
#
# You can also tell it to remember your Lastpass username with:
#   git config --global credential.helper "lastpass -l john@example.com"

declare -A params

cmd=""
while [ $# -gt 0 ]; do
	case "$1" in
	-l)
		shift
		lpassuser=$1
		;;
	get | store | erase)
		cmd="$1"
		shift
		host="$1"
		;;
	*)
		echo "Lastpass: unexpected command line flag '$1'." >&2
		exit 1
		;;
	esac
	shift
done

while read -r line && [ -n "$line" ]; do
	params[${line%%=*}]=${line#*=}
done

if [ "${params['protocol']}" != "https" ] || [ -z "${params["host"]}" ]; then
	exit
fi

if ! lpass status -q; then
	if [ -z "$lpassuser" ]; then
		read -r -p "Lastpass: login required. Lastpass username: " lpassuser </dev/tty >/dev/tty
	fi
	if [ -z "$lpassuser" ]; then
		exit
	fi

	if ! lpass login "$lpassuser" >&2; then
		echo "Lastpass: failed to login" >&2
		exit
	fi
fi

# The sed command transforms 'Username: foo' to 'username=' for every line.
show=$(lpass show "${params["host"]}" 2>&1 | sed 's/^\([^:]*\): \(.*\)$/\l\1=\2/')
if grep -qi 'multiple matches found' <<<"$show"; then
	echo "Lastpass: skipping due to duplicate secret '${params["host"]}'; please remove duplicates." >/dev/stderr
	exit
fi

declare -A secret
while read -r line && [ -n "$line" ]; do
	secret[${line%%=*}]=${line#*=}
done < <(echo "$show" | grep -i '^[a-z]*=')

case "$cmd" in
get)
	if [ -z "${secret["username"]}" ] && [ -z "${secret["password"]}" ]; then
		exit
	fi
	printf "username=%s\npassword=%s\n" "${secret["username"]}" "${secret["password"]}"
	;;
store)
	if [ "${secret["username"]}" = "${params["username"]}" ] && [ "${secret["password"]}" = "${params["password"]}" ]; then
		exit
	fi

	cmd=add
	if [ -n "${secret["username"]}" ] || [ -n "${secret["password"]}" ]; then
		cmd=edit
	fi
	printf "Username: %s\nPassword: %s" "${params["username"]}" "${params["password"]}" \
		| lpass $cmd "${params["host"]}" --non-interactive >&2
	;;
erase)
	if [ -z "${secret["username"]}" ] && [ -z "${secret["password"]}" ]; then
		exit
	fi
	lpass rm "${params["host"]}" >&2
	;;
esac
